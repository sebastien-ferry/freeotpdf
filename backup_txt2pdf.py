# Convert freeotp-backup.txt to freeotp-backup.pdf embedding corresponding QR Codes
# freeotp-backup.txt is generated by FreeOTP+ (One Time Password)
# https://github.com/helloworld1/FreeOTPPlus

import re
import urllib.parse

import pyqrcodeng
# PDF management  https://pyfpdf.readthedocs.io/en/latest/Tutorial/index.html
from fpdf import FPDF


# fpdf management of header and footer through dedicated class overload (and eponym methods)
class PDF(FPDF):
    def header(self):
        self.set_font('Arial', 'B', 12)
        self.cell(80)
        self.cell(0, 8, 'FreeOTP+ QR Codes', 1, 0, 'C')
        self.ln(20)

    def footer(self):
        self.set_y(-15)
        self.set_font('Arial', 'I', 8)
        self.cell(0, 10, 'Page ' + str(self.page_no()) + '/{nb}', 0, 0, 'C')


# read free OTP+'s backup
with open('freeotp-backup.txt') as f:
    content = f.readlines()

pdf = PDF('P', 'mm', 'A4')
pdf.alias_nb_pages()
pdf.add_page()

# File format is:
#    otpauth://totp/seby%40127.1
#    ?secret=EUYRNTKIPJWHVLU7OTSBV47P
#    &issuer=
#    &algorithm=SHA1&digits=6&period=30
line_index = 0
for line in content:
    print("")
    line_index = line_index + 1

    line_split = re.split('[&?]', line)
    title = urllib.parse.unquote(line_split[0][15:])
    print("# %s" % title)
    pdf.set_font('Arial', 'B', 14)
    pdf.cell(10)
    pdf.set_x(10)
    pdf.cell(0, 10, title, 1, 1)

    q_x = pdf.get_x()
    q_y = pdf.get_y()

    print("=" * (2+len(title)))
    print(">", line_split[0])
    for i in range(1, len(line_split)):
        print(" -   %s" % line_split[i])
        pdf.set_font('Arial', '', 8)
        pdf.cell(45)
        pdf.multi_cell(w=0, h=8, txt=line_split[i], border=1, align="L", fill=False)

    # Prepare QR code
    url = pyqrcodeng.create(line, error='L')
    file_qrcode = "tmp/qrcode-" + str(line_index) + ".png"
    url.png(file_qrcode, scale=5)

    pdf.image(file_qrcode, x=10, y=q_y + 2, w=40)
    pdf.ln(10)

pdf.output('freeotp-backup.pdf', 'F')
